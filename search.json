[{"path":[]},{"path":"https://ropengov.github.io/RPublica/index.html","id":"propublica-api-client","dir":"","previous_headings":"","what":"ProPublica API Client","title":"ProPublica API Client","text":"package released GPL-2 part rOpenGov project. Licenses data depend particular API, access data (regardless license) APIs allowed ProPublica’s Data Terms Use. package serves client library (currently) three ProPublica data journalism APIs: Nonprofit Explorer, provides access IRS Form 990 data every organization required file Form 990 (.e., claiming tax exempt status). data public domain. Forensics, provides state- county-level data coroner medical examiner systems. data released modified Creative Commons license. Free Files, provides access political television spending data based FCC filings 33 swing markets. data released modified Creative Commons license.","code":""},{"path":"https://ropengov.github.io/RPublica/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ProPublica API Client","text":"RPublica available GitHub can (soon) installed within R favorite CRAN mirror: latest development version, available , can installed directly using devtools:","code":"install.packages(\"RPublica\") # install.packages(\"devtools\") library(\"devtools\") install_github(\"rOpenGov/RPublica\")"},{"path":[]},{"path":"https://ropengov.github.io/RPublica/index.html","id":"nonprofit-explorer","dir":"","previous_headings":"Using the package","what":"Nonprofit Explorer","title":"ProPublica API Client","text":"Nonprofit Explorer API functionality includes two functions: npsearch, retrieve subsets available organizations, np_org retrieve detailed information given organization including direct link complete Form 990 organization (PDF).","code":"library('RPublica') str(np_search('propublica'), max=1) ## List of 14 ##  $ total_results : int 2 ##  $ filings       :'data.frame':  2 obs. of  101 variables: ##   .. [list output truncated] ##  $ num_pages     : int 1 ##  $ cur_page      : int 0 ##  $ page_offset   : int 0 ##  $ per_page      : int 25 ##  $ order         : NULL ##  $ sort_order    : NULL ##  $ search_query  : chr \"propublica\" ##  $ selected_state: NULL ##  $ selected_ntee : int 0 ##  $ selected_code : NULL ##  $ data_source   : chr \"ProPublica Nonprofit Explorer API: https://projects.propublica.org/nonprofits/api/\\nIRS Exempt Organizations Business Master Fi\"| __truncated__ ##  $ api_version   : int 1 str(np_org(142007220), max=1) ## List of 5 ##  $ organization        :List of 31 ##  $ filings_with_data   :'data.frame':    2 obs. of  68 variables: ##  $ filings_without_data:'data.frame':    9 obs. of  5 variables: ##  $ data_source         : chr \"ProPublica Nonprofit Explorer API: https://projects.propublica.org/nonprofits/api/\\nIRS Exempt Organizations Business Master Fi\"| __truncated__ ##  $ api_version         : int 1"},{"path":"https://ropengov.github.io/RPublica/index.html","id":"forensics-api","dir":"","previous_headings":"Using the package","what":"Forensics API","title":"ProPublica API Client","text":"Forensics API functionality includes two functions: geos, return data specific state, systems, return detailed data statistics specified medical examiner (coroner) system.","code":"library('RPublica') g <- geos() str(g[1:5]) ## 'data.frame':    80 obs. of  5 variables: ##  $ geo.ar_association_key_name: int  1 2 3 4 5 6 7 8 9 10 ... ##  $ geo.cached_slug            : chr  \"ak\" \"ar\" \"ct\" \"de\" ... ##  $ geo.coroner_system         : chr  \"none\" \"county\" \"none\" \"none\" ... ##  $ geo.created_at             : chr  \"2011-05-04T12:22:11-04:00\" \"2011-05-04T12:22:11-04:00\" \"2011-05-04T12:22:11-04:00\" \"2011-05-04T12:22:11-04:00\" ... ##  $ geo.district               : logi  NA NA NA NA NA NA ... str(geos('ny')) ## List of 1 ##  $ geo:List of 15 ##   ..$ cached_slug            : chr \"ny\" ##   ..$ coroner_system         : chr \"sometimes\" ##   ..$ created_at             : chr \"2011-05-04T12:22:12-04:00\" ##   ..$ district               : NULL ##   ..$ id                     : int 36 ##   ..$ kind                   : chr \"state\" ##   ..$ medical_examiner_system: chr \"sometimes\" ##   ..$ name                   : chr \"New York\" ##   ..$ note                   : NULL ##   ..$ population             : NULL ##   ..$ postal_abbreviation    : chr \"NY\" ##   ..$ updated_at             : chr \"2011-05-04T12:25:11-04:00\" ##   ..$ system_types           :List of 2 ##   .. ..$ medical_examiner_system: chr \"sometimes\" ##   .. ..$ coroner_system         : chr \"sometimes\" ##   ..$ medical_examiners      : list() ##   ..$ coroners               : list() str(systems(36), max=1) ## List of 18 ##  $ accreditation              : chr \"\" ##  $ autopsies                  : NULL ##  $ bc_forensic_pathologists   : int 22 ##  $ cached_slug                : NULL ##  $ created_at                 : chr \"2011-05-04T12:23:55-04:00\" ##  $ fellows                    : int 4 ##  $ forensic_pathologists      : NULL ##  $ id                         : int 36 ##  $ name                       : chr \"New York City Office of Chief Medical Examiner\" ##  $ note                       : chr \"Not included in analysis of autopsy data. \" ##  $ pending                    : NULL ##  $ pt_bc_forensic_pathologists: int 0 ##  $ pt_uc_forensic_pathologists: int 0 ##  $ uc_forensic_pathologists   : int 4 ##  $ updated_at                 : chr \"2011-05-04T12:23:55-04:00\" ##  $ website                    : chr \"http://www.nyc.gov/html/ocme/html/home/home.shtml\" ##  $ stats                      :'data.frame': 42 obs. of  3 variables: ##  $ geos                       :'data.frame': 5 obs. of  12 variables:"},{"path":"https://ropengov.github.io/RPublica/index.html","id":"free-the-files","dir":"","previous_headings":"Using the package","what":"Free the Files","title":"ProPublica API Client","text":"Free Files API functionality includes four functions: market (retrieving available markets, specific market), station (retrieving station-specific data,committee(retrieving sponsoring committees, specific committee), andfiling` (retrieving details specific filing). codebook describing values returned function available : https://projects.propublica.org/free--files/api.","code":"library('RPublica') str(market()[1:5]) ## 'data.frame':    33 obs. of  5 variables: ##  $ market.name          : chr  \"NEW YORK\" \"PHILADELPHIA\" \"BOSTON (MANCHESTER)\" \"WASHINGTON DC (HAGRSTWN)\" ... ##  $ market.slug          : chr  \"new-york\" \"philadelphia\" \"boston-manchester\" \"washington-dc-hagrstwn\" ... ##  $ market.titleized_name: chr  \"New York\" \"Philadelphia\" \"Boston and Manchester, N.H.\" \"Washington, D.C. and Hagerstown, Md.\" ... ##  $ market.filings_ct    : int  475 718 1736 988 5 658 1331 2687 1429 565 ... ##  $ market.freed_ct      : int  127 642 726 626 0 420 869 527 813 128 ... m <- market('new-york') s <- station('WEWS-TV') str(committee()) ## 'data.frame':    1203 obs. of  4 variables: ##  $ committee.gross_amt: chr  NA \"221716606.25\" \"91778107\" \"57249945\" ... ##  $ committee.id       : int  4665 1221 1220 942 3959 3820 883 1170 907 1172 ... ##  $ committee.name     : chr  \"PLANNED PARENTHOOD/ ISSUE\" \"OBAMA FOR AMERICA\" \"ROMNEY FOR PRESIDENT\" \"AMERICAN CROSSROADS\" ... ##  $ committee.slug     : chr  \"planned-parenthood-issue\" \"obama-for-america\" \"romney-for-president\" \"american-crossroads--2\" ... ofa <- committee('obama-for-america') str(filing(51212)) ## List of 13 ##  $ callsign            : chr \"WHP-TV\" ##  $ contract_number     : chr \"69338\" ##  $ dc_slug             : chr \"501618-69338-2-13519611148107-_-pdf\" ##  $ filing_type         : chr \"Federal\" ##  $ gross_amount        : num 35940 ##  $ id                  : int 51212 ##  $ market_id           : int 41 ##  $ thumbnail_url       : chr \"https://s3.amazonaws.com/s3.documentcloud.org/documents/501618/pages/69338-2-13519611148107-_-pdf-p1-thumbnail.gif\" ##  $ transcriptions_count: int 2 ##  $ upload_date         : chr \"2012-11-03T00:00:00Z\" ##  $ url                 : chr \"/collect/files/72313/Political File/2012/Federal/President/BARACK OBAMA/69338/69338-2 (13519611148107)_.pdf\" ##  $ committee           :List of 3 ##   ..$ id  : int 1221 ##   ..$ name: chr \"OBAMA FOR AMERICA\" ##   ..$ slug: chr \"obama-for-america\" ##  $ agency              :List of 1 ##   ..$ name: chr \"GREER MARGOLIS MITCHELL\""},{"path":"https://ropengov.github.io/RPublica/reference/RPublica-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ProPublica API Client — RPublica-package","title":"ProPublica API Client — RPublica-package","text":"Client accessing ProPublica's data journalism APIs.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/RPublica-package.html","id":"section-author","dir":"Reference","previous_headings":"","what":"Author","title":"ProPublica API Client — RPublica-package","text":"Thomas J. Leeper Maintainer: Thomas J. Leeper <thosjleeper@gmail.com>","code":""},{"path":"https://ropengov.github.io/RPublica/reference/RPublica-package.html","id":"section-references","dir":"Reference","previous_headings":"","what":"References","title":"ProPublica API Client — RPublica-package","text":"APIs: Nonprofit Explorer Forensics Free Files","code":""},{"path":"https://ropengov.github.io/RPublica/reference/committees.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve committees or committee — committee","title":"Retrieve committees or committee — committee","text":"Retrieve available committees, specific committee","code":""},{"path":"https://ropengov.github.io/RPublica/reference/committees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve committees or committee — committee","text":"","code":"committee(slug = NULL, ...)"},{"path":"https://ropengov.github.io/RPublica/reference/committees.html","id":"pkg-arg-slug","dir":"Reference","previous_headings":"","what":"slug (argument)","title":"Retrieve committees or committee — committee","text":"slug optional character string containing “slug” referring political committee.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/committees.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Retrieve committees or committee — committee","text":"... Arguments passed GET.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/committees.html","id":"section-author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve committees or committee — committee","text":"Thomas J. Leeper","code":""},{"path":"https://ropengov.github.io/RPublica/reference/filing.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve filing — filing","title":"Retrieve filing — filing","text":"Retrieve specific filing, ID","code":""},{"path":"https://ropengov.github.io/RPublica/reference/filing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve filing — filing","text":"","code":"filing(id, ...)"},{"path":"https://ropengov.github.io/RPublica/reference/filing.html","id":"pkg-arg-id","dir":"Reference","previous_headings":"","what":"id (argument)","title":"Retrieve filing — filing","text":"id character string containing filing identification number.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/filing.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Retrieve filing — filing","text":"... Arguments passed GET.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/filing.html","id":"section-author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve filing — filing","text":"Thomas J. Leeper","code":""},{"path":"https://ropengov.github.io/RPublica/reference/forensics.html","id":null,"dir":"Reference","previous_headings":"","what":"Forensics API — forensics","title":"Forensics API — forensics","text":"Retrieve details given state system","code":""},{"path":"https://ropengov.github.io/RPublica/reference/forensics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forensics API — forensics","text":"","code":"geos(state=NULL, ...)  systems(id, ...)"},{"path":"https://ropengov.github.io/RPublica/reference/forensics.html","id":"pkg-arg-state","dir":"Reference","previous_headings":"","what":"state (argument)","title":"Forensics API — forensics","text":"state optional character string containing two-letter state postal code. NULL, results available states returned.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/forensics.html","id":"pkg-arg-id","dir":"Reference","previous_headings":"","what":"id (argument)","title":"Forensics API — forensics","text":"id identification number particular medical examiner coroner system.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/forensics.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Forensics API — forensics","text":"... Arguments passed GET.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/forensics.html","id":"section-references","dir":"Reference","previous_headings":"","what":"References","title":"Forensics API — forensics","text":"API Documentation","code":""},{"path":"https://ropengov.github.io/RPublica/reference/forensics.html","id":"section-author","dir":"Reference","previous_headings":"","what":"Author","title":"Forensics API — forensics","text":"Thomas J. Leeper","code":""},{"path":"https://ropengov.github.io/RPublica/reference/market.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve market or markets — market","title":"Retrieve market or markets — market","text":"Retrieve available markets, specific market","code":""},{"path":"https://ropengov.github.io/RPublica/reference/market.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve market or markets — market","text":"","code":"market(slug = NULL, ...)"},{"path":"https://ropengov.github.io/RPublica/reference/market.html","id":"pkg-arg-slug","dir":"Reference","previous_headings":"","what":"slug (argument)","title":"Retrieve market or markets — market","text":"slug optional character string containing “slug” referring media market.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/market.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Retrieve market or markets — market","text":"... Arguments passed GET.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/market.html","id":"section-author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve market or markets — market","text":"Thomas J. Leeper","code":""},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonprofit Explorer — nonprofitexplorer","title":"Nonprofit Explorer — nonprofitexplorer","text":"Search retrieve nonprofit data","code":""},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonprofit Explorer — nonprofitexplorer","text":"","code":"np_search(q=NULL, order=NULL, sort=NULL, state=NULL, ntee=NULL, subsection=NULL, ...)  np_org(ein, ...)"},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":"pkg-arg-q","dir":"Reference","previous_headings":"","what":"q (argument)","title":"Nonprofit Explorer — nonprofitexplorer","text":"q character string containing search query.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":"pkg-arg-order","dir":"Reference","previous_headings":"","what":"order (argument)","title":"Nonprofit Explorer — nonprofitexplorer","text":"order character string containing field order results. One “name”, “city”, “state”, “c_code”, “fiscalyr”, “revenue”, “expenses”, “assets”, “liabilities”, “pct_officer_compt”. ascending descending sort parameter controlled sort.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":"pkg-arg-sort","dir":"Reference","previous_headings":"","what":"sort (argument)","title":"Nonprofit Explorer — nonprofitexplorer","text":"sort One “asc” “desc”, controlling order results (according ordering given order).","code":""},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":"pkg-arg-state","dir":"Reference","previous_headings":"","what":"state (argument)","title":"Nonprofit Explorer — nonprofitexplorer","text":"state two-letter state postal abbreviation code U.S. state territory. Use “ZZ” foreign organizations.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":"pkg-arg-ntee","dir":"Reference","previous_headings":"","what":"ntee (argument)","title":"Nonprofit Explorer — nonprofitexplorer","text":"ntee numeric value (1 10) containing National Taxonomy Exempt Entities (NTEE) Major Group code.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":"pkg-arg-subsection","dir":"Reference","previous_headings":"","what":"subsection (argument)","title":"Nonprofit Explorer — nonprofitexplorer","text":"subsection numeric value (2 92) referring subsection tax code section 501(c).","code":""},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":"pkg-arg-ein","dir":"Reference","previous_headings":"","what":"ein (argument)","title":"Nonprofit Explorer — nonprofitexplorer","text":"ein employer identification number (EIN).","code":""},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Nonprofit Explorer — nonprofitexplorer","text":"... Arguments passed GET.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonprofit Explorer — nonprofitexplorer","text":"list containing API response.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":"section-references","dir":"Reference","previous_headings":"","what":"References","title":"Nonprofit Explorer — nonprofitexplorer","text":"API Documentation","code":""},{"path":"https://ropengov.github.io/RPublica/reference/nonprofitexplorer.html","id":"section-author","dir":"Reference","previous_headings":"","what":"Author","title":"Nonprofit Explorer — nonprofitexplorer","text":"Thomas J. Leeper","code":""},{"path":"https://ropengov.github.io/RPublica/reference/ppQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"API Query — ppQuery","title":"API Query — ppQuery","text":"Execute API query","code":""},{"path":"https://ropengov.github.io/RPublica/reference/ppQuery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"API Query — ppQuery","text":"","code":"ppQuery(op, baseurl, args = NULL, ...)"},{"path":"https://ropengov.github.io/RPublica/reference/ppQuery.html","id":"pkg-arg-op","dir":"Reference","previous_headings":"","what":"op (argument)","title":"API Query — ppQuery","text":"op character string containing API operation, associated arguments.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/ppQuery.html","id":"pkg-arg-baseurl","dir":"Reference","previous_headings":"","what":"baseurl (argument)","title":"API Query — ppQuery","text":"baseurl base URL conducting API query.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/ppQuery.html","id":"pkg-arg-args","dir":"Reference","previous_headings":"","what":"args (argument)","title":"API Query — ppQuery","text":"args character string containing additional URL-encoded parameters.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/ppQuery.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"API Query — ppQuery","text":"... Arguments passed GET.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/ppQuery.html","id":"section-author","dir":"Reference","previous_headings":"","what":"Author","title":"API Query — ppQuery","text":"Thomas J. Leeper","code":""},{"path":"https://ropengov.github.io/RPublica/reference/station.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve station — station","title":"Retrieve station — station","text":"Retrieve station","code":""},{"path":"https://ropengov.github.io/RPublica/reference/station.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve station — station","text":"","code":"station(callsign, ...)"},{"path":"https://ropengov.github.io/RPublica/reference/station.html","id":"pkg-arg-callsign","dir":"Reference","previous_headings":"","what":"callsign (argument)","title":"Retrieve station — station","text":"callsign character string containing station callsign.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/station.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Retrieve station — station","text":"... Arguments passed GET.","code":""},{"path":"https://ropengov.github.io/RPublica/reference/station.html","id":"section-author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve station — station","text":"Thomas J. Leeper","code":""}]
